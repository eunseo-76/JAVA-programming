package com.kenny.queue;

import java.io.*;
import java.util.*;

public class baekjoon_10845 {
    public static void main(String[] args) {
        try{
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

            Queue<Integer> queue = new LinkedList<>();
            List<Integer> arr = new ArrayList<>();
            int num = Integer.parseInt(br.readLine());

            for (int i = 0; i < num; i++) {
                String input = br.readLine();
                String [] strArray = input.split(" ");

                switch (strArray[0]){
                    case "push" :
//                        queue.offer(strArray[1]);
                        break;
                    case "pop" :
                        if (!queue.isEmpty()) {
                            queue.peek();
                            bw.write(queue.poll());
                        } else {
                            bw.write("-1\n");
                        }
                        break;
                    case "size" :
                        bw.write(queue.size());
                        break;
                    case "empty" :
                        if(queue.isEmpty()) bw.write("1\n");
                        else bw.write("0\n");
                        break;
                    case "front" :
                        if(queue.isEmpty()) bw.write(queue.peek());
                        else bw.write("-1\n");
                        break;
                    case "back" :
                        if (queue.isEmpty()) {
                            // linkedlist로 만든 선형 큐는 인덱스로 값 어떻게 꺼내오나?
                            bw.write("0\n");
                        } else {
                            arr.addAll(queue);
                            System.out.println(arr.get(arr.size()-1));
                        }
                            break;
                }
            }


        } catch (IOException e) {
            e.printStackTrace();
            System.out.println(e.getMessage());
        }
    }
}
